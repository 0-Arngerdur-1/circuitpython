sudo: false
language: c
compiler:
  - gcc

addons:
  apt:
    sources:
      - deadsnakes # for python3.4
      - ubuntu-toolchain-r-test
      - debian-sid
      - mopidy-stable
      - r-packages-trusty
      - rabbitmq-testing
      # no arm-none-eabi-gcc
      #- extras-precise
      #- r-packages-precise

      #- avsm
      #- boost-latest
      #- cassou-emacs
      #- chef-current-precise
      #- chef-stable-precise
      #- couchbase-precise

      #- gammu
      #- gearman-developers
      #- george-edison55-precise-backports
      #- hvr-ghc
      #- kalakris-cmake
      #- kubuntu-backports
      #- llvm-toolchain-precise
      #- llvm-toolchain-precise-3.5
      #- llvm-toolchain-precise-3.6
      #- llvm-toolchain-precise-3.7

      #- lucid
      #- mariadb-10.0
      #- mongodb-upstart
      #- mongodb-precise
      #- partner-precise
      #- pgavin-ghdl
      #- pov-wkhtmltopdf
      #- precise-pgdg-9.5
      #- pypy
      #- pythonxy-devel
      #- rabbitmq-precise
      #- ubuntu-sdk-team
    packages:
      - python3
      - python3.4
      - gcc-4.7
      #- gcc-multilib
      - gcc-arm-none-eabi
      - qemu-system
      - mingw32

before_script:
#  - sudo add-apt-repository -y ppa:fkrull/deadsnakes
#  - sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
#  - sudo add-apt-repository -y ppa:terry.guo/gcc-arm-embedded
#  - sudo apt-get update -qq
#  - sudo apt-get install -y python3.4 python3 gcc-4.7 gcc-multilib gcc-arm-none-eabi qemu-system mingw32
#  # For teensy build
#  - sudo apt-get install realpath
#  # For coverage testing
  - pip install --user cpp-coveralls

script:
  - which gcc-4.7
  - which arm-none-eabi-gcc
  - make -C minimal test CC=gcc-4.7
  - make -C unix deplibs CC=gcc-4.7
  - make -C unix CC=gcc-4.7
  - make -C bare-arm
  #- make -C qemu-arm test
  #- make -C stmhal
  #- make -C stmhal -B MICROPY_PY_WIZNET5K=1 MICROPY_PY_CC3K=1
  #- make -C stmhal BOARD=STM32F4DISC
  #- make -C teensy
  #- make -C cc3200 BTARGET=application BTYPE=release
  #- make -C cc3200 BTARGET=bootloader  BTYPE=release
  - make -C windows CROSS_COMPILE=i586-mingw32msvc-

  # run tests without coverage info
  #- (cd tests && MICROPY_CPYTHON3=python3.4 ./run-tests)
  #- (cd tests && MICROPY_CPYTHON3=python3.4 ./run-tests --emit native)

  # run tests with coverage info
  - make -C unix CC=gcc-4.7 coverage
  - (cd tests && MICROPY_CPYTHON3=python3.4 MICROPY_MICROPYTHON=../unix/micropython_coverage ./run-tests)
  - (cd tests && MICROPY_CPYTHON3=python3.4 MICROPY_MICROPYTHON=../unix/micropython_coverage ./run-tests --emit native)

after_success:
  - (cd unix && coveralls --root .. --build-root . --gcov $(which gcov-4.7) --gcov-options '\-o build-coverage/' --include py --include extmod)

after_failure:
  - (cd tests && for exp in *.exp; do testbase=$(basename $exp .exp); echo -e "\nFAILURE $testbase"; diff -u $testbase.exp $testbase.out; done)
  - (grep -C 2 "FAIL" qemu-arm/build/console.out)
